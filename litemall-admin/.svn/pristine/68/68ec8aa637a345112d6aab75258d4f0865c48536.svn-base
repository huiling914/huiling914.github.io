<template>
  <div class="app-container">

    <!-- 查询和其他操作 -->
    <div class="filter-container">
      <el-input v-model="listQuery.teacherId" clearable class="filter-item" style="width: 200px;" placeholder="请输入教师ID"/>
      <el-input v-model="listQuery.name" clearable class="filter-item" style="width: 200px;" placeholder="请输入教师名称"/>
      <el-button v-permission="['GET /admin/brand/list']" class="filter-item" type="primary" icon="el-icon-search" @click="handleFilter">查找</el-button>
      <el-button v-if="listQuery.schoolId==undefined" v-permission="['POST /admin/brand/create']" class="filter-item" type="primary" icon="el-icon-edit" @click="handleCreate" disabled>添加</el-button>
      <el-button v-else v-permission="['POST /admin/brand/create']" class="filter-item" type="primary" icon="el-icon-edit" @click="handleCreate" >添加</el-button>
      <!-- <el-button :loading="downloadLoading" class="filter-item" type="primary" icon="el-icon-download" @click="handleDownload">导出</el-button> -->
    </div>

    <!-- 查询结果 -->
    <el-table v-loading="listLoading" :data="list" size="small" element-loading-text="正在查询中。。。" border fit highlight-current-row>

      <el-table-column align="center" label="教师ID" prop="id"/>

      <el-table-column align="center" label="教师姓名" prop="name"/>
      <el-table-column align="center" label="性别" prop="gender">
        <template slot-scope="scope">
             <el-tag>{{ scope.row.gender | genderFilter }}</el-tag>
        </template>
      </el-table-column> 
      <el-table-column align="center" label="身份证号" prop="identificationId"/>
      <el-table-column align="center" min-width="250px" label="介绍" prop="decription"/>
      <el-table-column align="center" label="星级" prop="star"/>
      <el-table-column align="center" label="手机号" prop="name"/>
      <el-table-column align="center" label="所属学校" prop="schoolName"/>
      <!-- <el-table-column align="center" property="picUrl" label="学校图片">
        <template slot-scope="scope">
          <img v-if="scope.row.picUrl" :src="scope.row.picUrl" width="80">
        </template>
      </el-table-column>
 -->
      

      <el-table-column align="center" label="操作" width="200" class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button v-if="listQuery.schoolId==-1" v-permission="['POST /admin/brand/update']" type="primary" size="mini" @click="handleUpdate(scope.row)" disabled>编辑</el-button>
          <el-button v-else v-permission="['POST /admin/brand/update']" type="primary" size="mini" @click="handleUpdate(scope.row)" >编辑</el-button>
          <el-button v-permission="['POST /admin/brand/delete']" type="danger" size="mini" @click="handleDelete(scope.row.id)">删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <pagination v-show="total>0" :total="total" :page.sync="listQuery.page" :limit.sync="listQuery.limit" @pagination="getList" />

    <!-- 添加或修改对话框 -->
    <el-dialog :title="textMap[dialogStatus]" :visible.sync="dialogFormVisible">
      <el-form ref="dataForm" :rules="rules" :model="dataForm" status-icon label-position="left" label-width="100px" style="width: 400px; margin-left:50px;">
        <el-form-item label="教师姓名" prop="name">
          <el-input v-model="dataForm.name"/>
        </el-form-item>
        <el-form-item label="性别" prop="gender">
          <el-select v-model="dataForm.gender" placeholder="请选择">
            <el-option
            v-for="item in option"
            :key="item.value"
            :label="item.label"
            :value="item.value">
          </el-option>
        </el-select>
        </el-form-item>
        <el-form-item label="身份证号" prop="identificationId">
          <el-input v-model="dataForm.identificationId"/>
        </el-form-item>
        <el-form-item label="介绍" prop="decription">
          <el-input v-model="dataForm.decription"/>
        </el-form-item>
        <el-form-item label="星级" prop="star">
          <el-input v-model="dataForm.star"/>
        </el-form-item>
        <el-form-item label="电话" prop="phone">
          <el-input v-model="dataForm.phone"/>
        </el-form-item>
        <el-form-item label="教师图片" prop="pictureUrl">
          <el-upload
            :headers="headers"
            :action="uploadPath"
            :show-file-list="false"
            :on-success="uploadPicUrl"
            class="avatar-uploader"
            accept=".jpg,.jpeg,.png,.gif">
            <img v-if="dataForm.pictureUrl" :src="dataForm.pictureUrl" class="avatar">
            <i v-else class="el-icon-plus avatar-uploader-icon"/>
          </el-upload>
        </el-form-item>
        
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogFormVisible = false">取消</el-button>
        <el-button v-if="dialogStatus=='create'" type="primary" @click="createTeacher">确定</el-button>
        <el-button v-else type="primary" @click="updateTeacher">确定</el-button>
      </div>
    </el-dialog>

  </div>
</template>

<style>
.avatar-uploader .el-upload {
  border: 1px dashed #d9d9d9;
  border-radius: 6px;
  cursor: pointer;
  position: relative;
  overflow: hidden;
}
.avatar-uploader .el-upload:hover {
  border-color: #20a0ff;
}
.avatar-uploader-icon {
  font-size: 28px;
  color: #8c939d;
  width: 120px;
  height: 120px;
  line-height: 120px;
  text-align: center;
}
.avatar {
  width: 145px;
  height: 145px;
  display: block;
}
</style>

<script>
import { listBrand, createBrand, updateBrand, deleteBrand } from '@/api/brand'
import { uploadPath } from '@/api/storage'
import { getToken } from '@/utils/auth'
import Pagination from '@/components/Pagination' // Secondary package based on el-pagination
import { listTeacher, AddTeacher,UpdateTeacher,DeleteTeacher} from '@/api/school'
const genderMap={
  0:'女',
  1:'男'
}
export default {
  name: 'Teacher',
  components: { Pagination },
  filters: {
    genderFilter(gender) {
      return genderMap[gender]
    }
  },
  data() {
    return {
      uploadPath,
      list: undefined,
      total: 0,
      listLoading: true,
      listQuery: {
        page: 1,
        limit: 20,
        teacherId:undefined,
        schoolId: undefined,
        name: undefined,
        
      },
      deleted:{
        ids:undefined
      },
      option:[
      {
        value:0,
        label:'女'
      },
      {
        value:1,
        label:'男'
      }
      ],
      dataForm: {
        schoolId:undefined,
        name:undefined,
        gender:undefined,
        identificationId:undefined,
        pictureUrl:undefined,
        decription:undefined,
        star:undefined, //float类型
        phone:undefined,
        updateList:undefined,
        uploadList:undefined,
        deleteList:undefined
      },
      dialogFormVisible: false,
      dialogStatus: '',
      textMap: {
        update: '编辑',
        create: '创建'
      },
      rules: {
        name: [
          { required: true, message: '品牌商名称不能为空', trigger: 'blur' }
        ]
      },
      downloadLoading: false
    }
  },
  computed: {
    headers() {
      return {
        'X-Litemall-Admin-Token': getToken()
      }
    }
  },
  created() {
    this.listQuery.schoolId=this.$route.params.schoolId

    console.log('aa')
    console.log(this.listQuery.schoolId)
    this.getTeacherList()
  },
  methods: {
    getTeacherList() {
      this.listLoading = true
      listTeacher(this.listQuery)
        .then(response => {
          this.list = response.data.data.items
          this.total = response.data.data.total
          this.listLoading = false
        })
        .catch(() => {
          this.list = []
          this.total = 0
          this.listLoading = false
        })
    },
    handleFilter() {
      this.listQuery.page = 1
      this.getTeacherList()
    },
    resetForm() {
      this.dataForm = {
        schoolId:undefined,
        name:undefined,
        gender:undefined,
        identificationId:undefined,
        pictureUrl:undefined,
        decription:undefined,
        star:undefined, //float类型
        phone:undefined,
        updateList:undefined,
        uploadList:undefined,
        deleteList:undefined
      }
    },
    handleCreate() {
      this.resetForm()
      this.dialogStatus = 'create'
      this.dialogFormVisible = true
      this.$nextTick(() => {
        this.$refs['dataForm'].clearValidate()
      })
    },
    uploadPicUrl: function(response) {
      this.dataForm.picUrl = response.data.url
    },
    createTeacher(){
      this.dataForm.schoolId=this.listQuery.schoolId;
      //console,log('12'+this.dataForm.schoolId);
      this.dataForm.pictureUrl='http://www.lebao108.com/images/school/teacher/1.jpg';
      this.dataForm.updateList=[];
      this.dataForm.uploadList=[];
      this.dataForm.deleteList=[];
      
      AddTeacher(this.dataForm).then((response)=>{
        this.dialogFormVisible = false
        this.$notify.success({
          title: '成功',
          message: '添加老师成功'
        })
      }).catch((error)=>{
        this.$notify.error({
          title: '失败',
           message: response.data.errmsg
        })
      })
    },
    createData() {
      this.$refs['dataForm'].validate(valid => {
        if (valid) {
          createBrand(this.dataForm)
            .then(response => {
              this.list.unshift(response.data.data)
              this.dialogFormVisible = false
              this.$notify.success({
                title: '成功',
                message: '创建成功'
              })
            })
            .catch(response => {
              this.$notify.error({
                title: '失败',
                message: response.data.errmsg
              })
            })
        }
      })
    },
    handleUpdate(row) {
      this.dataForm = Object.assign({}, row)
      this.dialogStatus = 'update'
      this.dialogFormVisible = true
      this.$nextTick(() => {
        this.$refs['dataForm'].clearValidate()
      })
    },
    updateTeacher(){
      this.dataForm.pictureUrl=this.dataForm.detailPictures[0].picUrl;
      this.dataForm.updateList=[];
      this.dataForm.uploadList=[];
      this.dataForm.deleteList=[];
      UpdateTeacher(this.dataForm).then((response)=>{
        for (const v of this.list) {
          if (v.id === this.dataForm.id) {
            const index = this.list.indexOf(v)
            this.list.splice(index, 1, this.dataForm)
            break
          }
        }
        this.dialogFormVisible = false
        this.$notify.success({
           title: '成功',
           message: '更新成功'
        })
      }).catch((error)=>{
        this.$notify.error({
          title: '失败',
          message: response.data.errmsg
        })
      })
    },
    updateData() {
      this.$refs['dataForm'].validate(valid => {
        if (valid) {
          updateBrand(this.dataForm)
            .then(() => {
              for (const v of this.list) {
                if (v.id === this.dataForm.id) {
                  const index = this.list.indexOf(v)
                  this.list.splice(index, 1, this.dataForm)
                  break
                }
              }
              this.dialogFormVisible = false
              this.$notify.success({
                title: '成功',
                message: '更新成功'
              })
            })
            .catch(response => {
              this.$notify.error({
                title: '失败',
                message: response.data.errmsg
              })
            })
        }
      })
    },
    handleDelete(id) {
      this.deleted.ids=id;
      DeleteTeacher(this.deleted)
        .then(response => {
          this.$notify.success({
            title: '成功',
            message: '删除成功'
          })
          const index = this.list.indexOf(row)
          this.list.splice(index, 1)
        })
        .catch(response => {
          this.$notify.error({
            title: '失败',
            message: response.data.errmsg
          })
        })
    },
    handleDownload() {
      this.downloadLoading = true
      import('@/vendor/Export2Excel').then(excel => {
        const tHeader = [
          '品牌商ID',
          '品牌商名称',
          '介绍',
          '低价',
          '品牌商图片'
        ]
        const filterVal = ['id', 'name', 'desc', 'floorPrice', 'picUrl']
        excel.export_json_to_excel2(
          tHeader,
          this.list,
          filterVal,
          '品牌商信息'
        )
        this.downloadLoading = false
      })
    }
  }
}
</script>
